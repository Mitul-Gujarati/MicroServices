server.port=9191

eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka/
spring.application.name= API-GATEWAY

# When you ok with expose your service id in url than use automatic routes configuration.
# But best practice is use manual routes configuration.


# When you want to do automatic routes configuration than use below configuration.
# Here url looks like "http://localhost:9191/department-service/api/departments/051" for department service.
# In Above url "department-service" is service id which present in service-registry.
# For Employee service :"http://localhost:9191/employee-service/api/employees/4"
# In Above url "employee-service" is service id which present in service-registry.

#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG

# When you want to do manually routes configuration than use below configuration.

## Routes for Employee Service

spring.cloud.gateway.routes[0].id=EMPLOYEE-SERVICE

# when we want to use inbuilt load balancer than we have to use "lb://EMPLOYEE-SERVICE" this uri.
# here "lb" means load balancer.
# when we don't want to use load balancer than we can use this uri: "http://localhost:8081".
spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE

# when client hit this url: "http://localhost:9191/api/employess" api gateway route this request to employee service.
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**

## Rotes for Department Service

spring.cloud.gateway.routes[1].id=DEPARTMENT-SERVICE

# when we want to use inbuilt load balancer than we have to use "lb://DEPARTMENT-SERVICE" this uri.
# here "lb" means load balancer.
# when we don't want to use load balancer than we can use this uri: "http://localhost:8080".
spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE 

# when client hit this url: "http://localhost:9191/api/departments" api gateway route this request to department service.
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**

## Rotes for Organization Service

spring.cloud.gateway.routes[2].id=ORGANIZATION-SERVICE

# when we want to use inbuilt load balancer than we have to use "lb://ORGANIZATION-SERVICE" this uri.
# here "lb" means load balancer.
# when we don't want to use load balancer than we can use this uri: "http://localhost:8083".
spring.cloud.gateway.routes[2].uri=lb://ORGANIZATION-SERVICE 

# when client hit this url: "http://localhost:9191/api/organizations" api gateway route this request to organization service.
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/organizations/**


management.tracing.sampling.probability=1.0
logging.pattern.level='%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]'

spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=*







